version: "3.9"

# api, nginx, db
# CPU 1.5
# MEM 550 MB

services:

  chmod:
    image: alpine
    command: >
      /bin/sh -c "
      sleep 2 &&
      chmod 777 /tmp_api01/rinha.sock &&
      chmod 777 /tmp_api02/rinha.sock &&
      sleep 2"
    volumes:
      - tmp_api01:/tmp_api01
      - tmp_api02:/tmp_api02
    depends_on:
      - api01
      - api02

  api01: &api
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api01
    environment:
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_DBNAME=${DATABASE_DBNAME}
      - SERVER_PORT=3001
    ports:
      - "3001:3001"
    volumes:
      - postgres_socket:/var/run/postgresql
      - tmp_api01:/app_tmp
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "50MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_DBNAME=${DATABASE_DBNAME}
      - SERVER_PORT=3002
    ports:
      - "3002:3002"
    volumes:
      - postgres_socket:/var/run/postgresql
      - tmp_api02:/app_tmp

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - tmp_api01:/tmp_api01
      - tmp_api02:/tmp_api02
    depends_on:
      chmod:
        condition: service_completed_successfully
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "20MB"

  db:
    image: postgres:16.2-alpine3.19
    hostname: ${DATABASE_HOST}
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DBNAME}
    ports:
      - 5432:5432
    volumes:
      - ./sql:/docker-entrypoint-initdb.d/
      - postgres_socket:/var/run/postgresql
    command: postgres -c max_connections=600 -c synchronous_commit=off -c fsync=off -c full_page_writes=off -c effective_io_concurrency=600 -c wal_level=minimal -c max_wal_senders=0 -c shared_buffers=128MB -c effective_cache_size=256MB -c checkpoint_timeout=30min
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "300MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d rinha -U admin"]
      interval: 3s
      timeout: 5s
      retries: 5

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1

volumes:
  postgres_socket:
  tmp_api01:
  tmp_api02: