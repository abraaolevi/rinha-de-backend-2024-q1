version: "3.9"

# api, nginx, db
# CPU 1.5
# MEM 550 MB

services:
  # air_api:
  #   image: cosmtrek/air
  #   working_dir: /app
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - DATABASE_USERNAME=${DATABASE_USERNAME}
  #     - DATABASE_PASSWORD=${DATABASE_PASSWORD}
  #     - DATABASE_HOST=${DATABASE_HOST}
  #     - DATABASE_PORT=${DATABASE_PORT}
  #     - DATABASE_DBNAME=${DATABASE_DBNAME}
  #   volumes:
  #     - ./:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy


  api01: &api
    # image: ana/minha-api-matadora:latest
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api01
    environment:
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_DBNAME=${DATABASE_DBNAME}
    ports:
      - "8081:3000"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.25"   # 0.5
          memory: "50MB" # 100MB

  api02:
    <<: *api 
    hostname: api02
    ports:
      - "8082:3000"
 
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999" 
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  # proxy:
  #   image: traefik:3.0
  #   hostname: proxy
  #   volumes:
  #     - ./traefik-static.yaml:/etc/traefik/traefik.yaml:ro  # static traefik configuration
  #     - ./traefik-dynamic.yaml:/etc/traefik/dynamic.yaml:ro  # dynamic traefik configuration
  #   depends_on:
  #     - api01
  #     - api02
  #   ports:
  #     - "9999:9999"
  #     - "8080:8080"
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.2"
  #         memory: "70MB"

  db:
    image: postgres:16.2-alpine3.19
    hostname: ${DATABASE_HOST}
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DBNAME}
    ports:
      - 5432:5432
    volumes:
      - ./sql:/docker-entrypoint-initdb.d/
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "400MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d rinha -U admin"]
      interval: 3s
      timeout: 5s
      retries: 5

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1